超市购物优惠打折方案：
a. 商品单价数组：prices=[10,5,8,8,6,3], 假定存在6种商品，单价如数组所示；
b. 用户订单方案：order=[2,17,3,10,1,27,5,2,4,8]，订单规则：[i1, m1, i2, m2, ..., in, mn], 其中代表第几件商品，m代表已购买的数量；
c. 商品优惠方案：promotions=[[0,7],[4,10],[2,6,1,9],[5,2]]，
优惠规则与打折规则如下：每一件商品只可能出现在一种优惠方案中
[0,7]-代表买7件商品0，可以享受4元折扣(达不到7件不享受)；
[2,6,1,9]-代表买6件商品2且9件商品1，可享受5元折扣；如果数量翻倍可重复享受，比如用户购买14件商品2且20件商品1，可享受5*2=10元折扣(但购买14件商品2且17件商品1只能享受5元)
d. 商品打折方案：discounts=[4,3,5,1], 打折规则：与优惠方案同序列，按对应优惠规则享受对应的折扣方案；

例如：根据当前示例数据：prices,order,promotions,discounts
prices=[10,5,8,8,6,3]
order=[2,17,3,10,1,27,5,2,4,9]
promotions=[[0,7],[4,10],[2,6,1,9],[5,2]]
discounts=[4,3,5,1]
则用户消费总金额为：
8 * 17 + 8 * 10 + 5 * 27 + 2 * 3 + 6 * 9 - 2 * 5 - 1 * 1 = 400
请提供一个函数计算最终消费金额：
function payment(prices,order,promotions,discounts) {

}
